Task: rDzBUS-easier_third_party_library_inclusion
==============================================================================

Motivation
----------

- Currently there isn't really an easy way of using a lot of headers (as in common when working with third-party libraries), in an eChronos package.

- A possible solution is to just create a .c file that contains a large schema forcing prj to include all of the headers like:

    /*<module>
    <headers>
        <header path="clock_driver.h" />
        <header path="smaccm_decls.h" />
        <header path="smaccm_receiver2.h" />
        <header path="smaccm_receiver.h" />
        <header path="smaccm_sender.h" />
        <header path="smaccm_test1_impl_types.h" />
    </headers>
    </module>*/
    ... all the c code (this example from Ihor)

- However the problem with this is interdependency using relative paths. For example, in the TI libraries, there are hundreds of header files & c files with include declarations of the form:

    #include <stdbool.h>
    #include <stdint.h>
    #include "inc/hw_memmap.h"
    #include "inc/hw_types.h"
    #include "inc/hw_ints.h"
    #include "driverlib/gpio.h"
    #include "driverlib/pin_map.h"
    #include "driverlib/rom.h"
    #include "driverlib/rom_map.h"
    #include "driverlib/sysctl.h"
    #include "driverlib/interrupt.h"
    ...

- This means that, as prj moves every interdependent file to one directory before final compilation, all of these relative links break

- It's important to note that there is a redundant syntax check in the vector table build script, which means you can't just add additional includes in client build scripts (easily). For ARM,it's at: packages/armv7/vectable.py:106

Goals
--------

- Make it easier to include large sets of third-party libraries with prj, with declarations in systems i.e:

    <system>
     <includes>
        <include path="/etc/lib/stdlib_hook/src/include" />
        <include path="/etc/lib/another_lib" />
        <include path="some/relative/lib" />
     </includes>
     <modules>
        ...
     </modules>
    </system>

- Display more sensible error message on bitband parsing failures inside the vector table build script, as if a developer currently tries to implement their own means of including other files; this area of code will fail with an error message that does not indicate why.

- In the future, .prx files should make custom build scripts redundant, however this is not the case currently so a better description of errors occuring due to this check is necessary as it is possible for developers to trigger it.

Test Plan
---------

- Perform build tests to ensure that adding this functionality doesn't adversely affect other areas of prj.
